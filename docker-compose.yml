version: "3"
services:
  postgres:
    container_name: postgres_DB
    image: postgres:13.3
    environment:
      POSTGRES_PASSWORD: "postgres"
    ports:
      - 5432:5432
    networks:
      - database-network
    #command: [ "postgres", "-c", "wal_level=logical", "-c", "log_statement=all", "-c", "log_destination=stderr", "-c", "max_replication_slots=50", "-c", "log_replication_commands=true" ]
    command: [ "postgres", "-c", "wal_level=logical", "-c", "log_destination=stderr", "-c", "max_replication_slots=50", "-c", "log_replication_commands=true", "-c", "max_logical_replication_workers=10", "-c", "max_connections=500" ]
  zookeeper:
    container_name: zookeeper
    image: "bitnami/zookeeper:latest"
    networks:
      - kafka-net
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    container_name: kafka
    image: "bitnami/kafka:latest"
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_HOST_NAME: "localhost"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper

networks:
  database-network:
    driver: bridge
  kafka-net:
    driver: bridge
